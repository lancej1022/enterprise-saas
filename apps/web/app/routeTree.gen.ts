/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedCartRouteImport } from './routes/_authenticated/cart'
import { Route as AuthenticatedArtistRouteImport } from './routes/_authenticated/artist'
import { Route as AuthenticatedInboxRouteRouteImport } from './routes/_authenticated/inbox/route'
import { Route as AuthenticatedInboxIndexRouteImport } from './routes/_authenticated/inbox/index'
import { Route as AuthenticatedInboxConversationIdRouteImport } from './routes/_authenticated/inbox/$conversation-id'
import { Route as AuthenticatedAdminUsersRouteImport } from './routes/_authenticated/admin/users'
import { Route as AuthenticatedAdminTeamsRouteImport } from './routes/_authenticated/admin/teams'
import { Route as AuthenticatedAdminOrganizationSettingsRouteImport } from './routes/_authenticated/admin/organization-settings'
import { Route as AuthenticatedAdminUsersUserIdRouteImport } from './routes/_authenticated/admin/users_.$userId'
import { Route as AuthenticatedAdminUsersAddUserRouteImport } from './routes/_authenticated/admin/users.add-user'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedCartRoute = AuthenticatedCartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedArtistRoute = AuthenticatedArtistRouteImport.update({
  id: '/artist',
  path: '/artist',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedInboxRouteRoute = AuthenticatedInboxRouteRouteImport.update({
  id: '/inbox',
  path: '/inbox',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedInboxIndexRoute = AuthenticatedInboxIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedInboxRouteRoute,
} as any)
const AuthenticatedInboxConversationIdRoute =
  AuthenticatedInboxConversationIdRouteImport.update({
    id: '/$conversation-id',
    path: '/$conversation-id',
    getParentRoute: () => AuthenticatedInboxRouteRoute,
  } as any)
const AuthenticatedAdminUsersRoute = AuthenticatedAdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAdminTeamsRoute = AuthenticatedAdminTeamsRouteImport.update({
  id: '/admin/teams',
  path: '/admin/teams',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAdminOrganizationSettingsRoute =
  AuthenticatedAdminOrganizationSettingsRouteImport.update({
    id: '/admin/organization-settings',
    path: '/admin/organization-settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminUsersUserIdRoute =
  AuthenticatedAdminUsersUserIdRouteImport.update({
    id: '/admin/users_/$userId',
    path: '/admin/users/$userId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAdminUsersAddUserRoute =
  AuthenticatedAdminUsersAddUserRouteImport.update({
    id: '/add-user',
    path: '/add-user',
    getParentRoute: () => AuthenticatedAdminUsersRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/inbox': typeof AuthenticatedInboxRouteRouteWithChildren
  '/artist': typeof AuthenticatedArtistRoute
  '/cart': typeof AuthenticatedCartRoute
  '/': typeof AuthenticatedIndexRoute
  '/admin/organization-settings': typeof AuthenticatedAdminOrganizationSettingsRoute
  '/admin/teams': typeof AuthenticatedAdminTeamsRoute
  '/admin/users': typeof AuthenticatedAdminUsersRouteWithChildren
  '/inbox/$conversation-id': typeof AuthenticatedInboxConversationIdRoute
  '/inbox/': typeof AuthenticatedInboxIndexRoute
  '/admin/users/add-user': typeof AuthenticatedAdminUsersAddUserRoute
  '/admin/users/$userId': typeof AuthenticatedAdminUsersUserIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/artist': typeof AuthenticatedArtistRoute
  '/cart': typeof AuthenticatedCartRoute
  '/': typeof AuthenticatedIndexRoute
  '/admin/organization-settings': typeof AuthenticatedAdminOrganizationSettingsRoute
  '/admin/teams': typeof AuthenticatedAdminTeamsRoute
  '/admin/users': typeof AuthenticatedAdminUsersRouteWithChildren
  '/inbox/$conversation-id': typeof AuthenticatedInboxConversationIdRoute
  '/inbox': typeof AuthenticatedInboxIndexRoute
  '/admin/users/add-user': typeof AuthenticatedAdminUsersAddUserRoute
  '/admin/users/$userId': typeof AuthenticatedAdminUsersUserIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_authenticated/inbox': typeof AuthenticatedInboxRouteRouteWithChildren
  '/_authenticated/artist': typeof AuthenticatedArtistRoute
  '/_authenticated/cart': typeof AuthenticatedCartRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/admin/organization-settings': typeof AuthenticatedAdminOrganizationSettingsRoute
  '/_authenticated/admin/teams': typeof AuthenticatedAdminTeamsRoute
  '/_authenticated/admin/users': typeof AuthenticatedAdminUsersRouteWithChildren
  '/_authenticated/inbox/$conversation-id': typeof AuthenticatedInboxConversationIdRoute
  '/_authenticated/inbox/': typeof AuthenticatedInboxIndexRoute
  '/_authenticated/admin/users/add-user': typeof AuthenticatedAdminUsersAddUserRoute
  '/_authenticated/admin/users_/$userId': typeof AuthenticatedAdminUsersUserIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/signup'
    | '/inbox'
    | '/artist'
    | '/cart'
    | '/'
    | '/admin/organization-settings'
    | '/admin/teams'
    | '/admin/users'
    | '/inbox/$conversation-id'
    | '/inbox/'
    | '/admin/users/add-user'
    | '/admin/users/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/artist'
    | '/cart'
    | '/'
    | '/admin/organization-settings'
    | '/admin/teams'
    | '/admin/users'
    | '/inbox/$conversation-id'
    | '/inbox'
    | '/admin/users/add-user'
    | '/admin/users/$userId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/signup'
    | '/_authenticated/inbox'
    | '/_authenticated/artist'
    | '/_authenticated/cart'
    | '/_authenticated/'
    | '/_authenticated/admin/organization-settings'
    | '/_authenticated/admin/teams'
    | '/_authenticated/admin/users'
    | '/_authenticated/inbox/$conversation-id'
    | '/_authenticated/inbox/'
    | '/_authenticated/admin/users/add-user'
    | '/_authenticated/admin/users_/$userId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/cart': {
      id: '/_authenticated/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof AuthenticatedCartRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/artist': {
      id: '/_authenticated/artist'
      path: '/artist'
      fullPath: '/artist'
      preLoaderRoute: typeof AuthenticatedArtistRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/inbox': {
      id: '/_authenticated/inbox'
      path: '/inbox'
      fullPath: '/inbox'
      preLoaderRoute: typeof AuthenticatedInboxRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/inbox/': {
      id: '/_authenticated/inbox/'
      path: '/'
      fullPath: '/inbox/'
      preLoaderRoute: typeof AuthenticatedInboxIndexRouteImport
      parentRoute: typeof AuthenticatedInboxRouteRoute
    }
    '/_authenticated/inbox/$conversation-id': {
      id: '/_authenticated/inbox/$conversation-id'
      path: '/$conversation-id'
      fullPath: '/inbox/$conversation-id'
      preLoaderRoute: typeof AuthenticatedInboxConversationIdRouteImport
      parentRoute: typeof AuthenticatedInboxRouteRoute
    }
    '/_authenticated/admin/users': {
      id: '/_authenticated/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthenticatedAdminUsersRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/teams': {
      id: '/_authenticated/admin/teams'
      path: '/admin/teams'
      fullPath: '/admin/teams'
      preLoaderRoute: typeof AuthenticatedAdminTeamsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/organization-settings': {
      id: '/_authenticated/admin/organization-settings'
      path: '/admin/organization-settings'
      fullPath: '/admin/organization-settings'
      preLoaderRoute: typeof AuthenticatedAdminOrganizationSettingsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/users_/$userId': {
      id: '/_authenticated/admin/users_/$userId'
      path: '/admin/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AuthenticatedAdminUsersUserIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/admin/users/add-user': {
      id: '/_authenticated/admin/users/add-user'
      path: '/add-user'
      fullPath: '/admin/users/add-user'
      preLoaderRoute: typeof AuthenticatedAdminUsersAddUserRouteImport
      parentRoute: typeof AuthenticatedAdminUsersRoute
    }
  }
}

interface AuthenticatedInboxRouteRouteChildren {
  AuthenticatedInboxConversationIdRoute: typeof AuthenticatedInboxConversationIdRoute
  AuthenticatedInboxIndexRoute: typeof AuthenticatedInboxIndexRoute
}

const AuthenticatedInboxRouteRouteChildren: AuthenticatedInboxRouteRouteChildren =
  {
    AuthenticatedInboxConversationIdRoute:
      AuthenticatedInboxConversationIdRoute,
    AuthenticatedInboxIndexRoute: AuthenticatedInboxIndexRoute,
  }

const AuthenticatedInboxRouteRouteWithChildren =
  AuthenticatedInboxRouteRoute._addFileChildren(
    AuthenticatedInboxRouteRouteChildren,
  )

interface AuthenticatedAdminUsersRouteChildren {
  AuthenticatedAdminUsersAddUserRoute: typeof AuthenticatedAdminUsersAddUserRoute
}

const AuthenticatedAdminUsersRouteChildren: AuthenticatedAdminUsersRouteChildren =
  {
    AuthenticatedAdminUsersAddUserRoute: AuthenticatedAdminUsersAddUserRoute,
  }

const AuthenticatedAdminUsersRouteWithChildren =
  AuthenticatedAdminUsersRoute._addFileChildren(
    AuthenticatedAdminUsersRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedInboxRouteRoute: typeof AuthenticatedInboxRouteRouteWithChildren
  AuthenticatedArtistRoute: typeof AuthenticatedArtistRoute
  AuthenticatedCartRoute: typeof AuthenticatedCartRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAdminOrganizationSettingsRoute: typeof AuthenticatedAdminOrganizationSettingsRoute
  AuthenticatedAdminTeamsRoute: typeof AuthenticatedAdminTeamsRoute
  AuthenticatedAdminUsersRoute: typeof AuthenticatedAdminUsersRouteWithChildren
  AuthenticatedAdminUsersUserIdRoute: typeof AuthenticatedAdminUsersUserIdRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedInboxRouteRoute: AuthenticatedInboxRouteRouteWithChildren,
  AuthenticatedArtistRoute: AuthenticatedArtistRoute,
  AuthenticatedCartRoute: AuthenticatedCartRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAdminOrganizationSettingsRoute:
    AuthenticatedAdminOrganizationSettingsRoute,
  AuthenticatedAdminTeamsRoute: AuthenticatedAdminTeamsRoute,
  AuthenticatedAdminUsersRoute: AuthenticatedAdminUsersRouteWithChildren,
  AuthenticatedAdminUsersUserIdRoute: AuthenticatedAdminUsersUserIdRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

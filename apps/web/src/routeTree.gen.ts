/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedAdminUsersImport } from './routes/_authenticated/admin/users'
import { Route as AuthenticatedAdminTeamsImport } from './routes/_authenticated/admin/teams'
import { Route as AuthenticatedAdminUsersUserIdImport } from './routes/_authenticated/admin/users_.$userId'
import { Route as AuthenticatedAdminUsersAddUserImport } from './routes/_authenticated/admin/users/add-user'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAdminUsersRoute = AuthenticatedAdminUsersImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAdminTeamsRoute = AuthenticatedAdminTeamsImport.update({
  id: '/admin/teams',
  path: '/admin/teams',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const AuthenticatedAdminUsersUserIdRoute =
  AuthenticatedAdminUsersUserIdImport.update({
    id: '/admin/users_/$userId',
    path: '/admin/users/$userId',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAdminUsersAddUserRoute =
  AuthenticatedAdminUsersAddUserImport.update({
    id: '/add-user',
    path: '/add-user',
    getParentRoute: () => AuthenticatedAdminUsersRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/admin/teams': {
      id: '/_authenticated/admin/teams'
      path: '/admin/teams'
      fullPath: '/admin/teams'
      preLoaderRoute: typeof AuthenticatedAdminTeamsImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/admin/users': {
      id: '/_authenticated/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthenticatedAdminUsersImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/admin/users/add-user': {
      id: '/_authenticated/admin/users/add-user'
      path: '/add-user'
      fullPath: '/admin/users/add-user'
      preLoaderRoute: typeof AuthenticatedAdminUsersAddUserImport
      parentRoute: typeof AuthenticatedAdminUsersImport
    }
    '/_authenticated/admin/users_/$userId': {
      id: '/_authenticated/admin/users_/$userId'
      path: '/admin/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AuthenticatedAdminUsersUserIdImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedAdminUsersRouteChildren {
  AuthenticatedAdminUsersAddUserRoute: typeof AuthenticatedAdminUsersAddUserRoute
}

const AuthenticatedAdminUsersRouteChildren: AuthenticatedAdminUsersRouteChildren =
  {
    AuthenticatedAdminUsersAddUserRoute: AuthenticatedAdminUsersAddUserRoute,
  }

const AuthenticatedAdminUsersRouteWithChildren =
  AuthenticatedAdminUsersRoute._addFileChildren(
    AuthenticatedAdminUsersRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAdminTeamsRoute: typeof AuthenticatedAdminTeamsRoute
  AuthenticatedAdminUsersRoute: typeof AuthenticatedAdminUsersRouteWithChildren
  AuthenticatedAdminUsersUserIdRoute: typeof AuthenticatedAdminUsersUserIdRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAdminTeamsRoute: AuthenticatedAdminTeamsRoute,
  AuthenticatedAdminUsersRoute: AuthenticatedAdminUsersRouteWithChildren,
  AuthenticatedAdminUsersUserIdRoute: AuthenticatedAdminUsersUserIdRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/': typeof AuthenticatedIndexRoute
  '/admin/teams': typeof AuthenticatedAdminTeamsRoute
  '/admin/users': typeof AuthenticatedAdminUsersRouteWithChildren
  '/admin/users/add-user': typeof AuthenticatedAdminUsersAddUserRoute
  '/admin/users/$userId': typeof AuthenticatedAdminUsersUserIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/': typeof AuthenticatedIndexRoute
  '/admin/teams': typeof AuthenticatedAdminTeamsRoute
  '/admin/users': typeof AuthenticatedAdminUsersRouteWithChildren
  '/admin/users/add-user': typeof AuthenticatedAdminUsersAddUserRoute
  '/admin/users/$userId': typeof AuthenticatedAdminUsersUserIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/admin/teams': typeof AuthenticatedAdminTeamsRoute
  '/_authenticated/admin/users': typeof AuthenticatedAdminUsersRouteWithChildren
  '/_authenticated/admin/users/add-user': typeof AuthenticatedAdminUsersAddUserRoute
  '/_authenticated/admin/users_/$userId': typeof AuthenticatedAdminUsersUserIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/signup'
    | '/'
    | '/admin/teams'
    | '/admin/users'
    | '/admin/users/add-user'
    | '/admin/users/$userId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/'
    | '/admin/teams'
    | '/admin/users'
    | '/admin/users/add-user'
    | '/admin/users/$userId'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/signup'
    | '/_authenticated/'
    | '/_authenticated/admin/teams'
    | '/_authenticated/admin/users'
    | '/_authenticated/admin/users/add-user'
    | '/_authenticated/admin/users_/$userId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/signup"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/admin/teams",
        "/_authenticated/admin/users",
        "/_authenticated/admin/users_/$userId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/teams": {
      "filePath": "_authenticated/admin/teams.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/users": {
      "filePath": "_authenticated/admin/users.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/admin/users/add-user"
      ]
    },
    "/_authenticated/admin/users/add-user": {
      "filePath": "_authenticated/admin/users/add-user.tsx",
      "parent": "/_authenticated/admin/users"
    },
    "/_authenticated/admin/users_/$userId": {
      "filePath": "_authenticated/admin/users_.$userId.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
